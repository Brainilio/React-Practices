{"ast":null,"code":"import * as actionTypes from \"./action\"; // js object that i wanna use as a initial state\n\nconst initialState = {\n  persons: []\n}; //fall back on initialstate\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_PERSON:\n      let newPersonArray = [...state.persons];\n      let updatedPersonArray = newPersonArray.concat({\n        id: new Date(),\n        name: action.name,\n        age: action.age\n      });\n      return { ...state,\n        persons: updatedPersonArray\n      };\n\n    case actionTypes.DELETE_PERSON:\n      return { ...state\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/brainilio/Desktop/Projects/Udemy_React_Course_2020_CodeStorage/Redux Assignment/src/store/reducer.js"],"names":["actionTypes","initialState","persons","reducer","state","action","type","ADD_PERSON","newPersonArray","updatedPersonArray","concat","id","Date","name","age","DELETE_PERSON"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,UAA7B,C,CAEA;;AACA,MAAMC,YAAY,GAAG;AACpBC,EAAAA,OAAO,EAAE;AADW,CAArB,C,CAIA;;AACA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AACjD,UAAQA,MAAM,CAACC,IAAf;AACC,SAAKN,WAAW,CAACO,UAAjB;AACC,UAAIC,cAAc,GAAG,CAAC,GAAGJ,KAAK,CAACF,OAAV,CAArB;AACA,UAAIO,kBAAkB,GAAGD,cAAc,CAACE,MAAf,CAAsB;AAC9CC,QAAAA,EAAE,EAAE,IAAIC,IAAJ,EAD0C;AAE9CC,QAAAA,IAAI,EAAER,MAAM,CAACQ,IAFiC;AAG9CC,QAAAA,GAAG,EAAET,MAAM,CAACS;AAHkC,OAAtB,CAAzB;AAKA,aAAO,EACN,GAAGV,KADG;AAENF,QAAAA,OAAO,EAAEO;AAFH,OAAP;;AAID,SAAKT,WAAW,CAACe,aAAjB;AACC,aAAO,EAAE,GAAGX;AAAL,OAAP;;AAED;AACC,aAAOA,KAAP;AAhBF;AAkBA,CAnBD;;AAqBA,eAAeD,OAAf","sourcesContent":["import * as actionTypes from \"./action\"\n\n// js object that i wanna use as a initial state\nconst initialState = {\n\tpersons: [],\n}\n\n//fall back on initialstate\nconst reducer = (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase actionTypes.ADD_PERSON:\n\t\t\tlet newPersonArray = [...state.persons]\n\t\t\tlet updatedPersonArray = newPersonArray.concat({\n\t\t\t\tid: new Date(),\n\t\t\t\tname: action.name,\n\t\t\t\tage: action.age,\n\t\t\t})\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpersons: updatedPersonArray,\n\t\t\t}\n\t\tcase actionTypes.DELETE_PERSON:\n\t\t\treturn { ...state }\n\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\nexport default reducer\n"]},"metadata":{},"sourceType":"module"}