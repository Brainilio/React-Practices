{"ast":null,"code":"var _jsxFileName = \"/Users/brainilio/Desktop/Projects/Udemy_React_Course_2020_CodeStorage/Redux Assignment/src/containers/Persons.js\";\nimport React, { Component } from \"react\";\nimport * as actionTypes from \"../store/action\";\nimport { connect } from \"react-redux\";\nimport Person from \"../components/Person/Person\";\nimport AddPerson from \"../components/AddPerson/AddPerson\";\n\nclass Persons extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      persons: []\n    };\n\n    this.personAddedHandler = () => {\n      const newPerson = {\n        id: Math.random(),\n        // not really unique but good enough here!\n        name: \"Max\",\n        age: Math.floor(Math.random() * 40)\n      };\n      this.setState(prevState => {\n        return {\n          persons: prevState.persons.concat(newPerson)\n        };\n      });\n    };\n\n    this.personDeletedHandler = personId => {\n      this.setState(prevState => {\n        return {\n          persons: prevState.persons.filter(person => person.id !== personId)\n        };\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(AddPerson, {\n      personAdded: this.personAddedHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 5\n      }\n    }), this.state.persons.map(person => /*#__PURE__*/React.createElement(Person, {\n      key: person.id,\n      name: person.name,\n      age: person.age,\n      clicked: () => this.personDeletedHandler(person.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 6\n      }\n    })));\n  }\n\n} //state to props\n\n\nconst mapStateToProps = state => {\n  return {\n    persons: state.persons\n  };\n}; //dispatch\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAddPerson: (id, name, age) => dispatch({\n      type: actionTypes.ADD_PERSON,\n      id: id,\n      name: name,\n      age: age\n    }),\n    onAddPerson: id => dispatch({\n      type: actionTypes.ADD_PERSON,\n      id: id\n    })\n  };\n}; //connection to store\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Persons);","map":{"version":3,"sources":["/Users/brainilio/Desktop/Projects/Udemy_React_Course_2020_CodeStorage/Redux Assignment/src/containers/Persons.js"],"names":["React","Component","actionTypes","connect","Person","AddPerson","Persons","state","persons","personAddedHandler","newPerson","id","Math","random","name","age","floor","setState","prevState","concat","personDeletedHandler","personId","filter","person","render","map","mapStateToProps","mapDispatchToProps","dispatch","onAddPerson","type","ADD_PERSON"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,KAAKC,WAAZ,MAA6B,iBAA7B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,SAAP,MAAsB,mCAAtB;;AAEA,MAAMC,OAAN,SAAsBL,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAC/BM,KAD+B,GACvB;AACPC,MAAAA,OAAO,EAAE;AADF,KADuB;;AAAA,SAK/BC,kBAL+B,GAKV,MAAM;AAC1B,YAAMC,SAAS,GAAG;AACjBC,QAAAA,EAAE,EAAEC,IAAI,CAACC,MAAL,EADa;AACE;AACnBC,QAAAA,IAAI,EAAE,KAFW;AAGjBC,QAAAA,GAAG,EAAEH,IAAI,CAACI,KAAL,CAAWJ,IAAI,CAACC,MAAL,KAAgB,EAA3B;AAHY,OAAlB;AAKA,WAAKI,QAAL,CAAeC,SAAD,IAAe;AAC5B,eAAO;AAAEV,UAAAA,OAAO,EAAEU,SAAS,CAACV,OAAV,CAAkBW,MAAlB,CAAyBT,SAAzB;AAAX,SAAP;AACA,OAFD;AAGA,KAd8B;;AAAA,SAgB/BU,oBAhB+B,GAgBPC,QAAD,IAAc;AACpC,WAAKJ,QAAL,CAAeC,SAAD,IAAe;AAC5B,eAAO;AACNV,UAAAA,OAAO,EAAEU,SAAS,CAACV,OAAV,CAAkBc,MAAlB,CAA0BC,MAAD,IAAYA,MAAM,CAACZ,EAAP,KAAcU,QAAnD;AADH,SAAP;AAGA,OAJD;AAKA,KAtB8B;AAAA;;AAwB/BG,EAAAA,MAAM,GAAG;AACR,wBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC,oBAAC,SAAD;AAAW,MAAA,WAAW,EAAE,KAAKf,kBAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,EAEE,KAAKF,KAAL,CAAWC,OAAX,CAAmBiB,GAAnB,CAAwBF,MAAD,iBACvB,oBAAC,MAAD;AACC,MAAA,GAAG,EAAEA,MAAM,CAACZ,EADb;AAEC,MAAA,IAAI,EAAEY,MAAM,CAACT,IAFd;AAGC,MAAA,GAAG,EAAES,MAAM,CAACR,GAHb;AAIC,MAAA,OAAO,EAAE,MAAM,KAAKK,oBAAL,CAA0BG,MAAM,CAACZ,EAAjC,CAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CAFF,CADD;AAaA;;AAtC8B,C,CAyChC;;;AACA,MAAMe,eAAe,GAAInB,KAAD,IAAW;AAClC,SAAO;AACNC,IAAAA,OAAO,EAAED,KAAK,CAACC;AADT,GAAP;AAGA,CAJD,C,CAMA;;;AACA,MAAMmB,kBAAkB,GAAIC,QAAD,IAAc;AACxC,SAAO;AACNC,IAAAA,WAAW,EAAE,CAAClB,EAAD,EAAKG,IAAL,EAAWC,GAAX,KACZa,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAE5B,WAAW,CAAC6B,UAApB;AAAgCpB,MAAAA,EAAE,EAAEA,EAApC;AAAwCG,MAAAA,IAAI,EAAEA,IAA9C;AAAoDC,MAAAA,GAAG,EAAEA;AAAzD,KAAD,CAFH;AAGNc,IAAAA,WAAW,EAAGlB,EAAD,IAAQiB,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAE5B,WAAW,CAAC6B,UAApB;AAAgCpB,MAAAA,EAAE,EAAEA;AAApC,KAAD;AAHvB,GAAP;AAKA,CAND,C,CAQA;;;AACA,eAAeR,OAAO,CAACuB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CrB,OAA7C,CAAf","sourcesContent":["import React, { Component } from \"react\"\nimport * as actionTypes from \"../store/action\"\nimport { connect } from \"react-redux\"\nimport Person from \"../components/Person/Person\"\nimport AddPerson from \"../components/AddPerson/AddPerson\"\n\nclass Persons extends Component {\n\tstate = {\n\t\tpersons: [],\n\t}\n\n\tpersonAddedHandler = () => {\n\t\tconst newPerson = {\n\t\t\tid: Math.random(), // not really unique but good enough here!\n\t\t\tname: \"Max\",\n\t\t\tage: Math.floor(Math.random() * 40),\n\t\t}\n\t\tthis.setState((prevState) => {\n\t\t\treturn { persons: prevState.persons.concat(newPerson) }\n\t\t})\n\t}\n\n\tpersonDeletedHandler = (personId) => {\n\t\tthis.setState((prevState) => {\n\t\t\treturn {\n\t\t\t\tpersons: prevState.persons.filter((person) => person.id !== personId),\n\t\t\t}\n\t\t})\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<AddPerson personAdded={this.personAddedHandler} />\n\t\t\t\t{this.state.persons.map((person) => (\n\t\t\t\t\t<Person\n\t\t\t\t\t\tkey={person.id}\n\t\t\t\t\t\tname={person.name}\n\t\t\t\t\t\tage={person.age}\n\t\t\t\t\t\tclicked={() => this.personDeletedHandler(person.id)}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t)\n\t}\n}\n\n//state to props\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tpersons: state.persons,\n\t}\n}\n\n//dispatch\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\tonAddPerson: (id, name, age) =>\n\t\t\tdispatch({ type: actionTypes.ADD_PERSON, id: id, name: name, age: age }),\n\t\tonAddPerson: (id) => dispatch({ type: actionTypes.ADD_PERSON, id: id }),\n\t}\n}\n\n//connection to store\nexport default connect(mapStateToProps, mapDispatchToProps)(Persons)\n"]},"metadata":{},"sourceType":"module"}