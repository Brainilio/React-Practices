{"ast":null,"code":"import { useReducer, useCallback } from \"react\";\n\nconst HttpReducer = (currentState, action) => {\n  switch (action.type) {\n    case \"START\":\n      return {\n        loading: true,\n        error: null,\n        data: null\n      };\n\n    case \"SUCCESS\":\n      return { ...currentState,\n        loading: false,\n        data: action.responseData\n      };\n\n    case \"FAILED\":\n      return {\n        loading: false,\n        error: action.error\n      };\n\n    case \"CLEAR\":\n      return { ...currentState,\n        error: null\n      };\n\n    default:\n      throw new Error(\"Should not get there!\");\n  }\n}; //custom hook\n\n\nconst useHttp = () => {\n  const [httpstate, httpdispatch] = useReducer(HttpReducer, {\n    loading: false,\n    error: null,\n    data: null\n  });\n  const sendRequest = useCallback((url, method, body) => {\n    httpdispatch({\n      type: \"START\"\n    });\n    fetch(url, {\n      method: method,\n      body: body,\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => {\n      return response.json();\n    }).then(responseData => {\n      httpdispatch({\n        type: \"SUCCESS\",\n        responseData: responseData\n      });\n    }).catch(error => {\n      httpdispatch({\n        type: \"FAILED\",\n        error: \"Something went wrong!\"\n      });\n    });\n  }, []);\n  return {\n    isLoading: httpstate.loading,\n    data: httpstate.data,\n    error: httpstate.error,\n    sendRequest: sendRequest\n  };\n};\n\nexport default useHttp;","map":{"version":3,"sources":["/Users/brainilio/Desktop/Projects/Udemy_React_Course_2020_CodeStorage/React-Hooks/src/hooks/http.js"],"names":["useReducer","useCallback","HttpReducer","currentState","action","type","loading","error","data","responseData","Error","useHttp","httpstate","httpdispatch","sendRequest","url","method","body","fetch","headers","then","response","json","catch","isLoading"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,WAArB,QAAwC,OAAxC;;AAEA,MAAMC,WAAW,GAAG,CAACC,YAAD,EAAeC,MAAf,KAA0B;AAC7C,UAAQA,MAAM,CAACC,IAAf;AACC,SAAK,OAAL;AACC,aAAO;AAAEC,QAAAA,OAAO,EAAE,IAAX;AAAiBC,QAAAA,KAAK,EAAE,IAAxB;AAA8BC,QAAAA,IAAI,EAAE;AAApC,OAAP;;AACD,SAAK,SAAL;AACC,aAAO,EAAE,GAAGL,YAAL;AAAmBG,QAAAA,OAAO,EAAE,KAA5B;AAAmCE,QAAAA,IAAI,EAAEJ,MAAM,CAACK;AAAhD,OAAP;;AACD,SAAK,QAAL;AACC,aAAO;AAAEH,QAAAA,OAAO,EAAE,KAAX;AAAkBC,QAAAA,KAAK,EAAEH,MAAM,CAACG;AAAhC,OAAP;;AACD,SAAK,OAAL;AACC,aAAO,EAAE,GAAGJ,YAAL;AAAmBI,QAAAA,KAAK,EAAE;AAA1B,OAAP;;AACD;AACC,YAAM,IAAIG,KAAJ,CAAU,uBAAV,CAAN;AAVF;AAYA,CAbD,C,CAeA;;;AACA,MAAMC,OAAO,GAAG,MAAM;AACrB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bb,UAAU,CAACE,WAAD,EAAc;AACzDI,IAAAA,OAAO,EAAE,KADgD;AAEzDC,IAAAA,KAAK,EAAE,IAFkD;AAGzDC,IAAAA,IAAI,EAAE;AAHmD,GAAd,CAA5C;AAMA,QAAMM,WAAW,GAAIb,WAAW,CAAC,CAACc,GAAD,EAAMC,MAAN,EAAcC,IAAd,KAAuB;AACvDJ,IAAAA,YAAY,CAAC;AAAER,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAZ;AACAa,IAAAA,KAAK,CAACH,GAAD,EAAM;AACVC,MAAAA,MAAM,EAAEA,MADE;AAEVC,MAAAA,IAAI,EAAEA,IAFI;AAGVE,MAAAA,OAAO,EAAE;AACR,wBAAgB;AADR;AAHC,KAAN,CAAL,CAOEC,IAPF,CAOQC,QAAD,IAAc;AACnB,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACA,KATF,EAUEF,IAVF,CAUQX,YAAD,IAAkB;AACvBI,MAAAA,YAAY,CAAC;AAAER,QAAAA,IAAI,EAAE,SAAR;AAAmBI,QAAAA,YAAY,EAAEA;AAAjC,OAAD,CAAZ;AACA,KAZF,EAaEc,KAbF,CAaShB,KAAD,IAAW;AACjBM,MAAAA,YAAY,CAAC;AAAER,QAAAA,IAAI,EAAE,QAAR;AAAkBE,QAAAA,KAAK,EAAE;AAAzB,OAAD,CAAZ;AACA,KAfF;AAgBA,GAlB+B,EAkB7B,EAlB6B,CAAhC;AAoBA,SAAO;AACNiB,IAAAA,SAAS,EAAEZ,SAAS,CAACN,OADf;AAENE,IAAAA,IAAI,EAAEI,SAAS,CAACJ,IAFV;AAGED,IAAAA,KAAK,EAAEK,SAAS,CAACL,KAHnB;AAIEO,IAAAA,WAAW,EAAEA;AAJf,GAAP;AAMA,CAjCD;;AAmCA,eAAeH,OAAf","sourcesContent":["import { useReducer, useCallback } from \"react\"\n\nconst HttpReducer = (currentState, action) => {\n\tswitch (action.type) {\n\t\tcase \"START\":\n\t\t\treturn { loading: true, error: null, data: null }\n\t\tcase \"SUCCESS\":\n\t\t\treturn { ...currentState, loading: false, data: action.responseData }\n\t\tcase \"FAILED\":\n\t\t\treturn { loading: false, error: action.error }\n\t\tcase \"CLEAR\":\n\t\t\treturn { ...currentState, error: null }\n\t\tdefault:\n\t\t\tthrow new Error(\"Should not get there!\")\n\t}\n}\n\n//custom hook\nconst useHttp = () => {\n\tconst [httpstate, httpdispatch] = useReducer(HttpReducer, {\n\t\tloading: false,\n\t\terror: null,\n\t\tdata: null,\n\t})\n\n\tconst sendRequest =  useCallback((url, method, body) => {\n\t\thttpdispatch({ type: \"START\" })\n\t\tfetch(url, {\n\t\t\tmethod: method,\n\t\t\tbody: body,\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t},\n\t\t})\n\t\t\t.then((response) => {\n\t\t\t\treturn response.json()\n\t\t\t})\n\t\t\t.then((responseData) => {\n\t\t\t\thttpdispatch({ type: \"SUCCESS\", responseData: responseData })\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\thttpdispatch({ type: \"FAILED\", error: \"Something went wrong!\" })\n\t\t\t})\n\t}, [])\n\n\treturn {\n\t\tisLoading: httpstate.loading,\n\t\tdata: httpstate.data,\n          error: httpstate.error,\n          sendRequest: sendRequest\n\t}\n}\n\nexport default useHttp\n"]},"metadata":{},"sourceType":"module"}