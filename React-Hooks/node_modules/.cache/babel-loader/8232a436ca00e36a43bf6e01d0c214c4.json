{"ast":null,"code":"var _jsxFileName = \"/Users/brainilio/Desktop/Projects/Udemy_React_Course_2020_CodeStorage/React-Hooks/src/components/Ingredients/Ingredients.js\";\nimport React, { useMemo } from \"react\";\nimport IngredientForm from \"./IngredientForm\";\nimport IngredientList from \"./IngredientList\";\nimport ErrorModal from \"../UI/ErrorModal\";\nimport Search from \"./Search\";\nimport useHttp from '../../hooks/http';\n\nconst ingredientReducer = (currentIngs, action) => {\n  switch (action.type) {\n    case \"SET\":\n      return action.ingredients;\n\n    case \"ADD\":\n      return [...currentIngs, action.newIngredient];\n\n    case \"DELETE\":\n      return currentIngs.filter(ing => ing.id !== action.id);\n\n    default:\n      throw new Error(\"Should not get there!\");\n  }\n};\n\nconst Ingredients = () => {\n  const [ingredients, dispatch] = React.useReducer(ingredientReducer, []);\n  const {\n    isLoading,\n    error,\n    data,\n    sendRequest,\n    reqExtra\n  } = useHttp(); //when new data, call dispatch\n\n  React.useEffect(() => {\n    if (reqExtra) {\n      dispatch({\n        type: 'DELETE',\n        id: reqExtra\n      });\n    } else {\n      dispatch({\n        type: 'ADD'\n      });\n    }\n  }, [data, reqExtra]);\n  const filteredIngredientsHandler = React.useCallback(filterIg => {\n    // setIngredients(filterIg)\n    dispatch({\n      type: \"SET\",\n      ingredients: filterIg\n    });\n  }, []);\n  const addIngredientHandler = React.useCallback(ingredient => {\n    sendRequest(\"https://dummyproject-35081.firebaseio.com/ingredients.json\", 'POST', JSON.stringify(ingredient)); // httpdispatch({ type: \"START\" })\n    // fetch(\"https://dummyproject-35081.firebaseio.com/ingredients.json\", {\n    // \tmethod: \"POST\",\n    // \tbody: JSON.stringify(ingredient),\n    // \theaders: { \"Content-Type\": \"application/json\" },\n    // })\n    // \t.then((response) => {\n    // \t\thttpdispatch({ type: \"SUCCESS\" })\n    // \t\treturn response.json()\n    // \t})\n    // \t.then((resData) => {\n    // \t\tdispatch({\n    // \t\t\ttype: \"ADD\",\n    // \t\t\tnewIngredient: {\n    // \t\t\t\tid: resData.name,\n    // \t\t\t\t...ingredient,\n    // \t\t\t},\n    // \t\t})\n    // \t})\n  }, []);\n  const removeIngredientHandler = React.useCallback(id => {\n    sendRequest(`https://dummyproject-35081.firebaseio.com/ingredients/${id}.json`, 'DELETE', null, id);\n  }, [sendRequest]);\n  const clearError = React.useCallback(() => {// httpdispatch({ type: \"CLEAR\" })\n  }, []);\n  const ingredientList = useMemo(() => {\n    return /*#__PURE__*/React.createElement(IngredientList, {\n      onRemoveItem: removeIngredientHandler,\n      ingredients: ingredients,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 4\n      }\n    });\n  }, [ingredients, removeIngredientHandler]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 3\n    }\n  }, error && /*#__PURE__*/React.createElement(ErrorModal, {\n    onClose: clearError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }\n  }, error), /*#__PURE__*/React.createElement(IngredientForm, {\n    onAdd: addIngredientHandler,\n    loading: isLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Search, {\n    onLoadIngredients: filteredIngredientsHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }\n  }), ingredientList));\n};\n\nexport default Ingredients;","map":{"version":3,"sources":["/Users/brainilio/Desktop/Projects/Udemy_React_Course_2020_CodeStorage/React-Hooks/src/components/Ingredients/Ingredients.js"],"names":["React","useMemo","IngredientForm","IngredientList","ErrorModal","Search","useHttp","ingredientReducer","currentIngs","action","type","ingredients","newIngredient","filter","ing","id","Error","Ingredients","dispatch","useReducer","isLoading","error","data","sendRequest","reqExtra","useEffect","filteredIngredientsHandler","useCallback","filterIg","addIngredientHandler","ingredient","JSON","stringify","removeIngredientHandler","clearError","ingredientList"],"mappings":"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","sourcesContent":["import React, { useMemo } from \"react\"\nimport IngredientForm from \"./IngredientForm\"\nimport IngredientList from \"./IngredientList\"\nimport ErrorModal from \"../UI/ErrorModal\"\nimport Search from \"./Search\"\nimport useHttp from '../../hooks/http'\n\nconst ingredientReducer = (currentIngs, action) => {\n\tswitch (action.type) {\n\t\tcase \"SET\":\n\t\t\treturn action.ingredients\n\t\tcase \"ADD\":\n\t\t\treturn [...currentIngs, action.newIngredient]\n\t\tcase \"DELETE\":\n\t\t\treturn currentIngs.filter((ing) => ing.id !== action.id)\n\t\tdefault:\n\t\t\tthrow new Error(\"Should not get there!\")\n\t}\n}\n\n\nconst Ingredients = () => {\n\tconst [ingredients, dispatch] = React.useReducer(ingredientReducer, [])\n  const { isLoading, error, data, sendRequest, reqExtra} = useHttp();\n\t\n\n //when new data, call dispatch\n  React.useEffect(() => {\n    if(reqExtra) { \n      dispatch({type: 'DELETE', id: reqExtra})\n    } else { \n      dispatch({\n        type: 'ADD', \n        \n      })\n    }\n  \n\t}, [data, reqExtra])\n\n\tconst filteredIngredientsHandler = React.useCallback((filterIg) => {\n\t\t// setIngredients(filterIg)\n\t\tdispatch({\n\t\t\ttype: \"SET\",\n\t\t\tingredients: filterIg,\n\t\t})\n\t}, [])\n\n\tconst addIngredientHandler = React.useCallback((ingredient) => {\n    sendRequest(\"https://dummyproject-35081.firebaseio.com/ingredients.json\", \n      'POST', JSON.stringify(ingredient))\n  \n  \t// httpdispatch({ type: \"START\" })\n\t\t// fetch(\"https://dummyproject-35081.firebaseio.com/ingredients.json\", {\n\t\t// \tmethod: \"POST\",\n\t\t// \tbody: JSON.stringify(ingredient),\n\t\t// \theaders: { \"Content-Type\": \"application/json\" },\n\t\t// })\n\t\t// \t.then((response) => {\n\t\t// \t\thttpdispatch({ type: \"SUCCESS\" })\n\t\t// \t\treturn response.json()\n\t\t// \t})\n\t\t// \t.then((resData) => {\n\t\t// \t\tdispatch({\n\t\t// \t\t\ttype: \"ADD\",\n\t\t// \t\t\tnewIngredient: {\n\t\t// \t\t\t\tid: resData.name,\n\t\t// \t\t\t\t...ingredient,\n\t\t// \t\t\t},\n\t\t// \t\t})\n\t\t// \t})\n\t}, [])\n\n\tconst removeIngredientHandler = React.useCallback((id) => {\n\t\tsendRequest(`https://dummyproject-35081.firebaseio.com/ingredients/${id}.json`, 'DELETE', null, id )\n\t}, [sendRequest])\n\n\tconst clearError = React.useCallback(() => {\n\t\t// httpdispatch({ type: \"CLEAR\" })\n\t}, [])\n\n\tconst ingredientList = useMemo(() => {\n\t\treturn (\n\t\t\t<IngredientList\n\t\t\t\tonRemoveItem={removeIngredientHandler}\n\t\t\t\tingredients={ingredients}\n\t\t\t/>\n\t\t)\n\t}, [ingredients, removeIngredientHandler])\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t{error && (\n\t\t\t\t<ErrorModal onClose={clearError}>{error}</ErrorModal>\n\t\t\t)}\n\n\t\t\t<IngredientForm\n\t\t\t\tonAdd={addIngredientHandler}\n\t\t\t\tloading={isLoading}\n\t\t\t/>\n\t\t\t<section>\n\t\t\t\t<Search onLoadIngredients={filteredIngredientsHandler} />\n\t\t\t\t{ingredientList}\n\t\t\t</section>\n\t\t</div>\n\t)\n}\n\nexport default Ingredients\n"]},"metadata":{},"sourceType":"module"}