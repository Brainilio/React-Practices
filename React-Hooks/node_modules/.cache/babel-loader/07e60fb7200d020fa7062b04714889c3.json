{"ast":null,"code":"var _jsxFileName = \"/Users/brainilio/Desktop/Projects/Udemy_React_Course_2020_CodeStorage/React-Hooks/src/components/Ingredients/Ingredients.js\";\nimport React from \"react\";\nimport IngredientForm from \"./IngredientForm\";\nimport IngredientList from \"./IngredientList\";\nimport ErrorModal from \"../UI/ErrorModal\";\nimport Search from \"./Search\";\n\nconst Ingredients = props => {\n  const [ingredients, setIngredients] = React.useState([]);\n  const [isLoading, setIsloading] = React.useState(false);\n  const [error, setError] = React.useState();\n  React.useEffect(() => {\n    console.log(\"Rendering\", ingredients);\n  }, [ingredients]);\n  const filteredIngredientsHandler = React.useCallback(filterIg => {\n    setIngredients(filterIg);\n  }, []);\n\n  const addIngredientHandler = ingredient => {\n    setIsloading(true);\n    fetch(\"https://dummyproject-35081.firebaseio.com/ingredients.json\", {\n      method: \"POST\",\n      body: JSON.stringify(ingredient),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => {\n      setIsloading(false);\n      return response.json();\n    }).then(resData => {\n      setIngredients(prevIngredients => [...prevIngredients, {\n        id: resData.name,\n        ...ingredient\n      }]);\n    });\n  };\n\n  const removeIngredientHandler = id => {\n    setIsloading(true);\n    fetch(`https://dummyproject-35081.firebaseio.com/ingredients/${id}.json`, {\n      method: \"DELETE\"\n    }).then(response => {\n      setIsloading(false);\n      setIngredients(prevIg => prevIg.filter(ig => ig.id !== id));\n    }).catch(error => {\n      setError(\"Something went wrong!\");\n      setIsloading(false);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 3\n    }\n  }, error && /*#__PURE__*/React.createElement(ErrorModal, {\n    onClose: () => {\n      setError(null);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, error), /*#__PURE__*/React.createElement(IngredientForm, {\n    onAdd: addIngredientHandler,\n    loading: isLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Search, {\n    onLoadIngredients: filteredIngredientsHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(IngredientList, {\n    onRemoveItem: removeIngredientHandler,\n    ingredients: ingredients,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  })));\n};\n\nexport default Ingredients;","map":{"version":3,"sources":["/Users/brainilio/Desktop/Projects/Udemy_React_Course_2020_CodeStorage/React-Hooks/src/components/Ingredients/Ingredients.js"],"names":["React","IngredientForm","IngredientList","ErrorModal","Search","Ingredients","props","ingredients","setIngredients","useState","isLoading","setIsloading","error","setError","useEffect","console","log","filteredIngredientsHandler","useCallback","filterIg","addIngredientHandler","ingredient","fetch","method","body","JSON","stringify","headers","then","response","json","resData","prevIngredients","id","name","removeIngredientHandler","prevIg","filter","ig","catch"],"mappings":"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","sourcesContent":["import React from \"react\"\n\nimport IngredientForm from \"./IngredientForm\"\nimport IngredientList from \"./IngredientList\"\nimport ErrorModal from \"../UI/ErrorModal\"\nimport Search from \"./Search\"\n\nconst Ingredients = (props) => {\n\tconst [ingredients, setIngredients] = React.useState([])\n\tconst [isLoading, setIsloading] = React.useState(false)\n\tconst [error, setError] = React.useState()\n\n\tReact.useEffect(() => {\n\t\tconsole.log(\"Rendering\", ingredients)\n\t}, [ingredients])\n\n\tconst filteredIngredientsHandler = React.useCallback((filterIg) => {\n\t\tsetIngredients(filterIg)\n\t}, [])\n\n\tconst addIngredientHandler = (ingredient) => {\n\t\tsetIsloading(true)\n\t\tfetch(\"https://dummyproject-35081.firebaseio.com/ingredients.json\", {\n\t\t\tmethod: \"POST\",\n\t\t\tbody: JSON.stringify(ingredient),\n\t\t\theaders: { \"Content-Type\": \"application/json\" },\n\t\t})\n\t\t\t.then((response) => {\n\t\t\t\tsetIsloading(false)\n\t\t\t\treturn response.json()\n\t\t\t})\n\t\t\t.then((resData) => {\n\t\t\t\tsetIngredients((prevIngredients) => [\n\t\t\t\t\t...prevIngredients,\n\t\t\t\t\t{\n\t\t\t\t\t\tid: resData.name,\n\t\t\t\t\t\t...ingredient,\n\t\t\t\t\t},\n\t\t\t\t])\n\t\t\t})\n\t}\n\n\tconst removeIngredientHandler = (id) => {\n\t\tsetIsloading(true)\n\t\tfetch(`https://dummyproject-35081.firebaseio.com/ingredients/${id}.json`, {\n\t\t\tmethod: \"DELETE\",\n\t\t})\n\t\t\t.then((response) => {\n\t\t\t\tsetIsloading(false)\n\t\t\t\tsetIngredients((prevIg) => prevIg.filter((ig) => ig.id !== id))\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tsetError(\"Something went wrong!\")\n\t\t\t\tsetIsloading(false)\n\t\t\t})\n\t}\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t{error && (\n\t\t\t\t<ErrorModal\n\t\t\t\t\tonClose={() => {\n\t\t\t\t\t\tsetError(null)\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{error}\n\t\t\t\t</ErrorModal>\n\t\t\t)}\n\n\t\t\t<IngredientForm onAdd={addIngredientHandler} loading={isLoading} />\n\t\t\t<section>\n\t\t\t\t<Search onLoadIngredients={filteredIngredientsHandler} />\n\t\t\t\t<IngredientList\n\t\t\t\t\tonRemoveItem={removeIngredientHandler}\n\t\t\t\t\tingredients={ingredients}\n\t\t\t\t/>\n\t\t\t</section>\n\t\t</div>\n\t)\n}\n\nexport default Ingredients\n"]},"metadata":{},"sourceType":"module"}