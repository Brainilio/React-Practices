{"ast":null,"code":"import * as actionTypes from \"../actions/actions\"; // js object that i wanna use as a initial state\n\nconst initialState = {\n  counter: 0\n}; //fall back on initialstate\n\nconst counter_reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.INCREMENT:\n      //make new object out of state\n      const newState = Object.assign({}, state);\n      newState.counter = state.counter + 1;\n      return newState;\n\n    case actionTypes.DECREMENT:\n      return { ...state,\n        counter: state.counter - 1\n      };\n\n    case actionTypes.ADD:\n      return { ...state,\n        counter: state.counter + action.value\n      };\n\n    case actionTypes.SUB:\n      return { ...state,\n        counter: state.counter - action.value\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default counter_reducer;","map":{"version":3,"sources":["/Users/brainilio/Desktop/Projects/Udemy_React_Course_2020_CodeStorage/Redux-Practices/src/store/reducers/counter.js"],"names":["actionTypes","initialState","counter","counter_reducer","state","action","type","INCREMENT","newState","Object","assign","DECREMENT","ADD","value","SUB"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,oBAA7B,C,CAEA;;AACA,MAAMC,YAAY,GAAG;AACpBC,EAAAA,OAAO,EAAE;AADW,CAArB,C,CAIA;;AACA,MAAMC,eAAe,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AACzD,UAAQA,MAAM,CAACC,IAAf;AACC,SAAKN,WAAW,CAACO,SAAjB;AACC;AACA,YAAMC,QAAQ,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,KAAlB,CAAjB;AACAI,MAAAA,QAAQ,CAACN,OAAT,GAAmBE,KAAK,CAACF,OAAN,GAAgB,CAAnC;AACA,aAAOM,QAAP;;AACD,SAAKR,WAAW,CAACW,SAAjB;AACC,aAAO,EAAE,GAAGP,KAAL;AAAYF,QAAAA,OAAO,EAAEE,KAAK,CAACF,OAAN,GAAgB;AAArC,OAAP;;AACD,SAAKF,WAAW,CAACY,GAAjB;AACC,aAAO,EAAE,GAAGR,KAAL;AAAYF,QAAAA,OAAO,EAAEE,KAAK,CAACF,OAAN,GAAgBG,MAAM,CAACQ;AAA5C,OAAP;;AACD,SAAKb,WAAW,CAACc,GAAjB;AACC,aAAO,EAAE,GAAGV,KAAL;AAAYF,QAAAA,OAAO,EAAEE,KAAK,CAACF,OAAN,GAAgBG,MAAM,CAACQ;AAA5C,OAAP;;AACD;AACC,aAAOT,KAAP;AAbF;AAeA,CAhBD;;AAkBA,eAAeD,eAAf","sourcesContent":["import * as actionTypes from \"../actions/actions\"\n\n// js object that i wanna use as a initial state\nconst initialState = {\n\tcounter: 0,\n}\n\n//fall back on initialstate\nconst counter_reducer = (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase actionTypes.INCREMENT:\n\t\t\t//make new object out of state\n\t\t\tconst newState = Object.assign({}, state)\n\t\t\tnewState.counter = state.counter + 1\n\t\t\treturn newState\n\t\tcase actionTypes.DECREMENT:\n\t\t\treturn { ...state, counter: state.counter - 1 }\n\t\tcase actionTypes.ADD:\n\t\t\treturn { ...state, counter: state.counter + action.value }\n\t\tcase actionTypes.SUB:\n\t\t\treturn { ...state, counter: state.counter - action.value }\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\nexport default counter_reducer\n"]},"metadata":{},"sourceType":"module"}