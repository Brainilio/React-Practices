{"ast":null,"code":"//export reducer that i wanna use here\n// js object that i wanna use as a initial state\nconst initialState = {\n  counter: 0,\n  results: []\n}; //fall back on initialstate\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"INCREMENT\":\n      //make new object out of state\n      const newState = Object.assign({}, state);\n      newState.counter = state.counter + 1;\n      return newState;\n\n    case \"DECREMENT\":\n      return { ...state,\n        counter: state.counter - 1\n      };\n\n    case \"ADD\":\n      return { ...state,\n        counter: state.counter + action.value\n      };\n\n    case \"SUB\":\n      return { ...state,\n        counter: state.counter - action.value\n      };\n\n    case \"STORE_RESULT\":\n      return { ...state,\n        results: state.results.concat({\n          id: new Date(),\n          valUE: state.counter\n        })\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/brainilio/Desktop/Projects/Udemy_React_Course_2020_CodeStorage/Redux/src/store/reducer.js"],"names":["initialState","counter","results","reducer","state","action","type","newState","Object","assign","value","concat","id","Date","valUE"],"mappings":"AAAA;AAEA;AACA,MAAMA,YAAY,GAAG;AACpBC,EAAAA,OAAO,EAAE,CADW;AAEpBC,EAAAA,OAAO,EAAE;AAFW,CAArB,C,CAKA;;AACA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AACjD,UAAQA,MAAM,CAACC,IAAf;AACC,SAAK,WAAL;AACC;AACA,YAAMC,QAAQ,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,KAAlB,CAAjB;AACAG,MAAAA,QAAQ,CAACN,OAAT,GAAmBG,KAAK,CAACH,OAAN,GAAgB,CAAnC;AACA,aAAOM,QAAP;;AACD,SAAK,WAAL;AACC,aAAO,EAAE,GAAGH,KAAL;AAAYH,QAAAA,OAAO,EAAEG,KAAK,CAACH,OAAN,GAAgB;AAArC,OAAP;;AACD,SAAK,KAAL;AACC,aAAO,EAAE,GAAGG,KAAL;AAAYH,QAAAA,OAAO,EAAEG,KAAK,CAACH,OAAN,GAAgBI,MAAM,CAACK;AAA5C,OAAP;;AACD,SAAK,KAAL;AACC,aAAO,EAAE,GAAGN,KAAL;AAAYH,QAAAA,OAAO,EAAEG,KAAK,CAACH,OAAN,GAAgBI,MAAM,CAACK;AAA5C,OAAP;;AACD,SAAK,cAAL;AACC,aAAO,EACN,GAAGN,KADG;AAENF,QAAAA,OAAO,EAAEE,KAAK,CAACF,OAAN,CAAcS,MAAd,CAAqB;AAAEC,UAAAA,EAAE,EAAE,IAAIC,IAAJ,EAAN;AAAkBC,UAAAA,KAAK,EAAEV,KAAK,CAACH;AAA/B,SAArB;AAFH,OAAP;;AAID;AACC,aAAOG,KAAP;AAlBF;AAoBA,CArBD;;AAuBA,eAAeD,OAAf","sourcesContent":["//export reducer that i wanna use here\n\n// js object that i wanna use as a initial state\nconst initialState = {\n\tcounter: 0,\n\tresults: [],\n}\n\n//fall back on initialstate\nconst reducer = (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase \"INCREMENT\":\n\t\t\t//make new object out of state\n\t\t\tconst newState = Object.assign({}, state)\n\t\t\tnewState.counter = state.counter + 1\n\t\t\treturn newState\n\t\tcase \"DECREMENT\":\n\t\t\treturn { ...state, counter: state.counter - 1 }\n\t\tcase \"ADD\":\n\t\t\treturn { ...state, counter: state.counter + action.value }\n\t\tcase \"SUB\":\n\t\t\treturn { ...state, counter: state.counter - action.value }\n\t\tcase \"STORE_RESULT\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tresults: state.results.concat({ id: new Date(), valUE: state.counter }),\n\t\t\t}\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\nexport default reducer\n"]},"metadata":{},"sourceType":"module"}