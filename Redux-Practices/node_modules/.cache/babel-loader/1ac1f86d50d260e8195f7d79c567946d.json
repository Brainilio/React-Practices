{"ast":null,"code":"var _jsxFileName = \"/Users/brainilio/Desktop/Projects/Udemy_React_Course_2020_CodeStorage/Redux/src/containers/Counter/Counter.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport CounterControl from \"../../components/CounterControl/CounterControl\";\nimport CounterOutput from \"../../components/CounterOutput/CounterOutput\";\n\nclass Counter extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      counter: 0\n    };\n\n    this.counterChangedHandler = (action, value) => {\n      switch (action) {\n        case \"inc\":\n          this.setState(prevState => {\n            return {\n              counter: prevState.counter + 1\n            };\n          });\n          break;\n\n        case \"dec\":\n          this.setState(prevState => {\n            return {\n              counter: prevState.counter - 1\n            };\n          });\n          break;\n\n        case \"add\":\n          this.setState(prevState => {\n            return {\n              counter: prevState.counter + value\n            };\n          });\n          break;\n\n        case \"sub\":\n          this.setState(prevState => {\n            return {\n              counter: prevState.counter - value\n            };\n          });\n          break;\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(CounterOutput, {\n      value: this.props.counter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(CounterControl, {\n      label: \"Increment\",\n      clicked: this.props.onIncrementCounter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(CounterControl, {\n      label: \"Decrement\",\n      clicked: this.props.onDecrementCounter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(CounterControl, {\n      label: \"Add 5\",\n      clicked: () => this.props.onAddCounter(5),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(CounterControl, {\n      label: \"Subtract 5\",\n      clicked: this.props.onSubCounter(5),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 5\n      }\n    }));\n  }\n\n} //before export => references the state from the reducer, so you can use it. (this is the state)\n\n\nconst mapStateToProps = state => {\n  return {\n    counter: state.counter\n  };\n}; // dispatch, this is what will go to your reducer (these are the methods that will target the state)\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onIncrementCounter: () => dispatch({\n      type: \"INCREMENT\"\n    }),\n    onDecrementCounter: () => dispatch({\n      type: \"DECREMENT\"\n    }),\n    onAddCounter: value => dispatch({\n      type: \"ADD\",\n      value: value\n    }),\n    onSubCounter: value => dispatch({\n      type: \"SUB\",\n      value: value\n    })\n  };\n}; //hoc connect, pass these functions to Counter\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Counter);","map":{"version":3,"sources":["/Users/brainilio/Desktop/Projects/Udemy_React_Course_2020_CodeStorage/Redux/src/containers/Counter/Counter.js"],"names":["React","Component","connect","CounterControl","CounterOutput","Counter","state","counter","counterChangedHandler","action","value","setState","prevState","render","props","onIncrementCounter","onDecrementCounter","onAddCounter","onSubCounter","mapStateToProps","mapDispatchToProps","dispatch","type"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\nimport { connect } from \"react-redux\"\n\nimport CounterControl from \"../../components/CounterControl/CounterControl\"\nimport CounterOutput from \"../../components/CounterOutput/CounterOutput\"\n\nclass Counter extends Component {\n\tstate = {\n\t\tcounter: 0,\n\t}\n\n\tcounterChangedHandler = (action, value) => {\n\t\tswitch (action) {\n\t\t\tcase \"inc\":\n\t\t\t\tthis.setState((prevState) => {\n\t\t\t\t\treturn { counter: prevState.counter + 1 }\n\t\t\t\t})\n\t\t\t\tbreak\n\t\t\tcase \"dec\":\n\t\t\t\tthis.setState((prevState) => {\n\t\t\t\t\treturn { counter: prevState.counter - 1 }\n\t\t\t\t})\n\t\t\t\tbreak\n\t\t\tcase \"add\":\n\t\t\t\tthis.setState((prevState) => {\n\t\t\t\t\treturn { counter: prevState.counter + value }\n\t\t\t\t})\n\t\t\t\tbreak\n\t\t\tcase \"sub\":\n\t\t\t\tthis.setState((prevState) => {\n\t\t\t\t\treturn { counter: prevState.counter - value }\n\t\t\t\t})\n\t\t\t\tbreak\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{/* properties received from the subscription */}\n\t\t\t\t<CounterOutput value={this.props.counter} />\n\t\t\t\t<CounterControl\n\t\t\t\t\tlabel=\"Increment\"\n\t\t\t\t\tclicked={this.props.onIncrementCounter}\n\t\t\t\t/>\n\t\t\t\t<CounterControl\n\t\t\t\t\tlabel=\"Decrement\"\n\t\t\t\t\tclicked={this.props.onDecrementCounter}\n\t\t\t\t/>\n\t\t\t\t<CounterControl\n\t\t\t\t\tlabel=\"Add 5\"\n\t\t\t\t\tclicked={() => this.props.onAddCounter(5)}\n\t\t\t\t/>\n\t\t\t\t<CounterControl\n\t\t\t\t\tlabel=\"Subtract 5\"\n\t\t\t\t\tclicked={this.props.onSubCounter(5)}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\n//before export => references the state from the reducer, so you can use it. (this is the state)\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tcounter: state.counter,\n\t}\n}\n\n// dispatch, this is what will go to your reducer (these are the methods that will target the state)\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\tonIncrementCounter: () => dispatch({ type: \"INCREMENT\" }),\n\t\tonDecrementCounter: () => dispatch({ type: \"DECREMENT\" }),\n\t\tonAddCounter: (value) => dispatch({ type: \"ADD\", value: value }),\n\t\tonSubCounter: (value) => dispatch({ type: \"SUB\", value: value }),\n\t}\n}\n\n//hoc connect, pass these functions to Counter\nexport default connect(mapStateToProps, mapDispatchToProps)(Counter)\n"]},"metadata":{},"sourceType":"module"}