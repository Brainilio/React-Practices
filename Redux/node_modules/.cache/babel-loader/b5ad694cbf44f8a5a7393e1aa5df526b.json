{"ast":null,"code":"//export reducer that i wanna use here\n// js object that i wanna use as a initial state\nconst initialState = {\n  counter: 0\n}; //fall back on initialstate\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"INCREMENT\":\n      return { ...state,\n        counter: state.counter + 1\n      };\n\n    case \"DECREMENT\":\n      return { ...state,\n        counter: state.counter - 1\n      };\n\n    case \"ADD\":\n      return { ...state,\n        counter: state.counter + action.value\n      };\n\n    case \"SUB\":\n      return { ...state,\n        counter: state.counter - action.value\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/brainilio/Desktop/Projects/Udemy_React_Course_2020_CodeStorage/Redux/src/store/reducer.js"],"names":["initialState","counter","reducer","state","action","type","value"],"mappings":"AAAA;AAEA;AACA,MAAMA,YAAY,GAAG;AACpBC,EAAAA,OAAO,EAAE;AADW,CAArB,C,CAIA;;AACA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AACjD,UAAQA,MAAM,CAACC,IAAf;AACC,SAAK,WAAL;AACC,aAAO,EAAE,GAAGF,KAAL;AAAYF,QAAAA,OAAO,EAAEE,KAAK,CAACF,OAAN,GAAgB;AAArC,OAAP;;AACD,SAAK,WAAL;AACC,aAAO,EAAE,GAAGE,KAAL;AAAYF,QAAAA,OAAO,EAAEE,KAAK,CAACF,OAAN,GAAgB;AAArC,OAAP;;AACD,SAAK,KAAL;AACC,aAAO,EAAE,GAAGE,KAAL;AAAYF,QAAAA,OAAO,EAAEE,KAAK,CAACF,OAAN,GAAgBG,MAAM,CAACE;AAA5C,OAAP;;AACD,SAAK,KAAL;AACC,aAAO,EAAE,GAAGH,KAAL;AAAYF,QAAAA,OAAO,EAAEE,KAAK,CAACF,OAAN,GAAgBG,MAAM,CAACE;AAA5C,OAAP;;AACD;AACC,aAAOH,KAAP;AAVF;AAYA,CAbD;;AAeA,eAAeD,OAAf","sourcesContent":["//export reducer that i wanna use here\n\n// js object that i wanna use as a initial state\nconst initialState = {\n\tcounter: 0,\n}\n\n//fall back on initialstate\nconst reducer = (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase \"INCREMENT\":\n\t\t\treturn { ...state, counter: state.counter + 1 }\n\t\tcase \"DECREMENT\":\n\t\t\treturn { ...state, counter: state.counter - 1 }\n\t\tcase \"ADD\":\n\t\t\treturn { ...state, counter: state.counter + action.value }\n\t\tcase \"SUB\":\n\t\t\treturn { ...state, counter: state.counter - action.value }\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\nexport default reducer\n"]},"metadata":{},"sourceType":"module"}