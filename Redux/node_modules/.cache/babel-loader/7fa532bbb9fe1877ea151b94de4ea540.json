{"ast":null,"code":"var _jsxFileName = \"/Users/brainilio/Desktop/Projects/Udemy_React_Course_2020_CodeStorage/Redux/src/containers/Counter/Counter.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actionTypes from \"../../store/actions\";\nimport CounterControl from \"../../components/CounterControl/CounterControl\";\nimport CounterOutput from \"../../components/CounterOutput/CounterOutput\";\n\nclass Counter extends Component {\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(CounterOutput, {\n      value: this.props.counter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(CounterControl, {\n      label: \"Increment\",\n      clicked: this.props.onIncrementCounter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(CounterControl, {\n      label: \"Decrement\",\n      clicked: this.props.onDecrementCounter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(CounterControl, {\n      label: \"Add 5\",\n      clicked: () => this.props.onAddCounter(5),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(CounterControl, {\n      label: \"Subtract 5\",\n      clicked: () => this.props.onSubCounter(5),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.props.onStoreResult,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 5\n      }\n    }, \"Store result\"), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 5\n      }\n    }, this.props.storedResults.map(result => /*#__PURE__*/React.createElement(\"li\", {\n      key: result.id,\n      onClick: () => this.props.onDeleteResult(result.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }\n    }, result.value, \" is the current value.\"))));\n  }\n\n} //before export => references the state from the reducer, so you can use it. (this is the state)\n\n\nconst mapStateToProps = state => {\n  return {\n    counter: state.counter.counter,\n    storedResults: state.results.results\n  };\n}; // dispatch, this is what will go to your reducer (these are the methods that will target the state)\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onIncrementCounter: () => dispatch({\n      type: actionTypes.INCREMENT\n    }),\n    onDecrementCounter: () => dispatch({\n      type: actionTypes.DECREMENT\n    }),\n    onAddCounter: value => dispatch({\n      type: actionTypes.ADD,\n      value: value\n    }),\n    onSubCounter: value => dispatch({\n      type: actionTypes.SUB,\n      value: value\n    }),\n    onStoreResult: () => dispatch({\n      type: actionTypes.STORE_RESULT\n    }),\n    onDeleteResult: id => dispatch({\n      type: actionTypes.DELETE_RESULT,\n      resultId: id\n    })\n  };\n}; //hoc connect, pass these functions to Counter\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Counter);","map":{"version":3,"sources":["/Users/brainilio/Desktop/Projects/Udemy_React_Course_2020_CodeStorage/Redux/src/containers/Counter/Counter.js"],"names":["React","Component","connect","actionTypes","CounterControl","CounterOutput","Counter","render","props","counter","onIncrementCounter","onDecrementCounter","onAddCounter","onSubCounter","onStoreResult","storedResults","map","result","id","onDeleteResult","value","mapStateToProps","state","results","mapDispatchToProps","dispatch","type","INCREMENT","DECREMENT","ADD","SUB","STORE_RESULT","DELETE_RESULT","resultId"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\nimport { connect } from \"react-redux\"\nimport * as actionTypes from \"../../store/actions\"\nimport CounterControl from \"../../components/CounterControl/CounterControl\"\nimport CounterOutput from \"../../components/CounterOutput/CounterOutput\"\n\nclass Counter extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{/* properties received from the subscription */}\n\t\t\t\t<CounterOutput value={this.props.counter} />\n\t\t\t\t<CounterControl\n\t\t\t\t\tlabel=\"Increment\"\n\t\t\t\t\tclicked={this.props.onIncrementCounter}\n\t\t\t\t/>\n\t\t\t\t<CounterControl\n\t\t\t\t\tlabel=\"Decrement\"\n\t\t\t\t\tclicked={this.props.onDecrementCounter}\n\t\t\t\t/>\n\t\t\t\t<CounterControl\n\t\t\t\t\tlabel=\"Add 5\"\n\t\t\t\t\tclicked={() => this.props.onAddCounter(5)}\n\t\t\t\t/>\n\t\t\t\t<CounterControl\n\t\t\t\t\tlabel=\"Subtract 5\"\n\t\t\t\t\tclicked={() => this.props.onSubCounter(5)}\n\t\t\t\t/>\n\t\t\t\t<button onClick={this.props.onStoreResult}>Store result</button>\n\t\t\t\t<ul>\n\t\t\t\t\t{this.props.storedResults.map((result) => (\n\t\t\t\t\t\t<li\n\t\t\t\t\t\t\tkey={result.id}\n\t\t\t\t\t\t\tonClick={() => this.props.onDeleteResult(result.id)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{result.value} is the current value.\n\t\t\t\t\t\t</li>\n\t\t\t\t\t))}\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\n//before export => references the state from the reducer, so you can use it. (this is the state)\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tcounter: state.counter.counter,\n\t\tstoredResults: state.results.results,\n\t}\n}\n\n// dispatch, this is what will go to your reducer (these are the methods that will target the state)\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\tonIncrementCounter: () => dispatch({ type: actionTypes.INCREMENT }),\n\t\tonDecrementCounter: () => dispatch({ type: actionTypes.DECREMENT }),\n\t\tonAddCounter: (value) => dispatch({ type: actionTypes.ADD, value: value }),\n\t\tonSubCounter: (value) => dispatch({ type: actionTypes.SUB, value: value }),\n\t\tonStoreResult: () => dispatch({ type: actionTypes.STORE_RESULT }),\n\t\tonDeleteResult: (id) =>\n\t\t\tdispatch({ type: actionTypes.DELETE_RESULT, resultId: id }),\n\t}\n}\n\n//hoc connect, pass these functions to Counter\nexport default connect(mapStateToProps, mapDispatchToProps)(Counter)\n"]},"metadata":{},"sourceType":"module"}